<m:MetroWindow x:Class="MyLaunch.Views.PreferencesWindow"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
               xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
               xmlns:p="http://prismlibrary.com/"
               xmlns:m="http://metro.mahapps.com/winfx/xaml/controls"
               xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
               xmlns:le="http://wpflocalizeextension.codeplex.com"
               xmlns:qc="http://QuickConverter.CodePlex.com/"
               xmlns:ge="clr-namespace:SourceChord.GridExtra;assembly=GridExtra.Wpf"
               xmlns:pb="clr-namespace:WinCopies.Util.Data;assembly=WinCopies.Util.Desktop"
               xmlns:dd="urn:gong-wpf-dragdrop"
               xmlns:s="clr-namespace:System;assembly=mscorlib"
               xmlns:root="clr-namespace:MyLaunch"
               xmlns:launchItems="clr-namespace:MyLaunch.Models.LaunchItems"
               xmlns:behaviors="clr-namespace:MyLaunch.Views.Behaviors"
               xmlns:controls="clr-namespace:MyLaunch.Views.Controls"
               xmlns:helpers="clr-namespace:MyLaunch.Views.Helpers"
               mc:Ignorable="d"
               p:ViewModelLocator.AutoWireViewModel="True"
               Height="575" Width="930" WindowStartupLocation="CenterScreen" WindowTransitionsEnabled="False"
               Title="{Binding ProductInfo.Product, Mode=OneWay}" TitleCharacterCasing="Normal"
               TitleForeground="{StaticResource PrimaryHueMidForegroundBrush}"
               WindowTitleBrush="{StaticResource PrimaryHueMidBrush}" NonActiveWindowTitleBrush="{StaticResource PrimaryHueMidBrush}"
               BorderBrush="{StaticResource PrimaryHueMidBrush}" GlowBrush="{StaticResource PrimaryHueMidBrush}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedHandler, Mode=OneTime}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding ClosedHandler, Mode=OneTime}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <helpers:BindingProxy x:Key="Proxy" Data="{Binding Mode=OneWay}"/>
    </Window.Resources>

    <md:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, Mode=TwoWay, ElementName=HamburgerToggleButton}">
        <!-- ドロワーコンテンツ -->
        <md:DrawerHost.LeftDrawerContent>
            <DockPanel MinWidth="150">
                <ToggleButton IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=HamburgerToggleButton}" Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                              DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="10"/>
                <ListBox x:Name="Contents" SelectedValuePath="Content" PreviewMouseLeftButtonUp="Contents_PreviewMouseLeftButtonUp">
                    <ListBox.Items>
                        <ListBoxItem Content="{le:Loc Label_LaunchItemSettings}" Tag="LaunchItemSettings" IsSelected="True"/>
                        <ListBoxItem Content="{le:Loc Label_LaunchSettings}" Tag="LaunchSettings"/>
                        <ListBoxItem Content="{le:Loc Command_About}" Tag="About"/>
                    </ListBox.Items>
                </ListBox>
            </DockPanel>
        </md:DrawerHost.LeftDrawerContent>

        <DockPanel>
            <!-- カラー領域 -->
            <md:ColorZone Mode="PrimaryMid" md:ShadowAssist.ShadowDepth="Depth2" DockPanel.Dock="Top" Padding="10">
                <DockPanel>
                    <ToggleButton x:Name="HamburgerToggleButton" Style="{StaticResource MaterialDesignHamburgerToggleButton}"/>
                    <TextBlock Text="{Binding SelectedValue, Mode=OneWay, ElementName=Contents}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"/>
                </DockPanel>
            </md:ColorZone>

            <!-- コンテンツ領域 -->
            <ContentControl x:Name="ContentArea" Content="{Binding SelectedItem.Tag, Mode=OneWay, ElementName=Contents}">
                <ContentControl.Resources>
                    <!-- 表示項目設定 -->
                    <DataTemplate x:Key="LaunchItemSettingsContentTemplate">
                        <DataTemplate.Resources>
                            <s:Double x:Key="IconSize">24</s:Double>
                            <Style x:Key="TitleTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignSubtitle1TextBlock}">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="md:TextFieldAssist.HasClearButton" Value="True"/>
                            </Style>
                            <Style TargetType="{x:Type md:PackIcon}">
                                <Setter Property="Height" Value="{StaticResource IconSize}"/>
                                <Setter Property="Width"  Value="{StaticResource IconSize}"/>
                            </Style>
                        </DataTemplate.Resources>
                        
                        <Grid Margin="20" ge:GridEx.RowDefinition="Auto, 10, *" ge:GridEx.ColumnDefinition="*, 10, 3*">
                            <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="{le:Loc Text_LaunchItemSettingsTitle}" Style="{StaticResource TitleTextBlock}"/>
                            
                            <Border Grid.Row="2" Grid.Column="0" Visibility="{qc:Binding '$P == 0 ? Visibility.Visible : Visibility.Collapsed', P={Binding LaunchItemSettings.Items.Count, Mode=OneWay}}" DataContext="{Binding Data, Mode=OneWay, Source={StaticResource Proxy}}">
                                <StackPanel Margin="5 0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                    <md:PackIcon Kind="FileTree" Width="64" Height="64" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                                </StackPanel>
                            </Border>

                            <TreeView x:Name="LaunchItems" Grid.Row="2" Grid.Column="0" DataContext="{Binding Data, Mode=OneWay, Source={StaticResource Proxy}}" ItemsSource="{Binding LaunchItemSettings.Items, Mode=OneWay}"
                                      dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.SelectDroppedItems="True" dd:DragDrop.DropHandler="{Binding DropHandler, Mode=OneWay}"
                                      behaviors:TreeViewAttachedBehavior.SelectOnRightClick="True" behaviors:TreeViewAttachedBehavior.ExpandByEnter="True">
                                <pb:PushBindingManager.PushBindings>
                                    <pb:PushBinding TargetProperty="SelectedItem" Path="SelectedLaunchItem.Value"/>
                                </pb:PushBindingManager.PushBindings>

                                <TreeView.Resources>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=OneWay}" DataType="{x:Type launchItems:Group}"/>
                                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                        <Setter Property="IsExpanded" Value="True"/>
                                        <Setter Property="ToolTipService.Placement" Value="Right"/>
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                        <Style.Triggers>
                                            <!-- ツリーアイテムスタイル(Link) -->
                                            <DataTrigger Binding="{Binding Kind}" Value="Link">
                                                <Setter Property="ToolTip" Value="{Binding FileName, Mode=OneWay}"/>
                                                <Setter Property="HeaderTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Image Source="{Binding Image, Mode=OneWay}" Height="20" Margin="0 0 5 0"/>
                                                                <TextBlock Text="{qc:Binding 'Path.GetFileName($P)', P={Binding FileName, Mode=OneWay}}" VerticalAlignment="Center"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ContextMenu DataContext="{Binding Data, Mode=OneWay, Source={StaticResource Proxy}}">
                                                            <MenuItem Command="{Binding RemoveItemCommand, Mode=OneTime}" Header="{le:Loc Command_RemoveItem}">
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="DeleteOutline"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Command="{Binding InsertSeparatorCommand, Mode=OneTime}" Header="{le:Loc Command_InsertSeparator}">
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="Minus"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <!-- ツリーアイテムスタイル(Group) -->
                                            <DataTrigger Binding="{Binding Kind}" Value="Group">
                                                <Setter Property="Header" Value="{qc:Binding 'Path.GetFileName($P)', P={Binding FileName, Mode=OneWay}}"/>
                                                <Setter Property="ToolTip" Value="{Binding FileName, Mode=OneWay}"/>
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ContextMenu DataContext="{Binding Data, Mode=OneWay, Source={StaticResource Proxy}}">
                                                            <MenuItem Command="{Binding AddLinkCommand, Mode=OneTime}" Header="{le:Loc Command_SelectFilePath}">
                                                                <MenuItem.CommandParameter>
                                                                    <s:Boolean>False</s:Boolean>
                                                                </MenuItem.CommandParameter>
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="File"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Command="{Binding AddLinkCommand, Mode=OneTime}" Header="{le:Loc Command_SelectDirectoryPath}">
                                                                <MenuItem.CommandParameter>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </MenuItem.CommandParameter>
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="FolderOpen"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Command="{Binding AddGroupCommand, Mode=OneTime}" Header="{le:Loc Command_AddGroup}">
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="FileTableBoxOutline"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Command="{Binding RemoveItemCommand, Mode=OneTime}" Header="{le:Loc Command_RemoveItem}">
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="DeleteOutline"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Command="{Binding InsertSeparatorCommand, Mode=OneTime}" Header="{le:Loc Command_InsertSeparator}">
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="Minus"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <!-- ツリーアイテムスタイル(Separator) -->
                                            <DataTrigger Binding="{Binding Kind}" Value="Separator">
                                                <Setter Property="ToolTip" Value="{le:Loc Label_Separator}"/>
                                                <Setter Property="HeaderTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Border Height="1" Width="50" Margin="0 5" Background="{DynamicResource MaterialDesignDivider}"/>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ContextMenu DataContext="{Binding Data, Mode=OneWay, Source={StaticResource Proxy}}">
                                                            <MenuItem Command="{Binding RemoveItemCommand, Mode=OneTime}" Header="{le:Loc Command_RemoveItem}">
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="DeleteOutline"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Command="{Binding InsertSeparatorCommand, Mode=OneTime}" Header="{le:Loc Command_InsertSeparator}">
                                                                <MenuItem.Icon>
                                                                    <md:PackIcon Kind="Minus"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.Resources>
                            </TreeView>

                            <Border Grid.Row="2" Grid.Column="2" Visibility="{qc:Binding '$P == null ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedItem, Mode=OneWay, ElementName=LaunchItems}}">
                                <StackPanel Margin="5 0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                    <TextBlock Text="{le:Loc Text_LaunchItemSettingsHint}" Style="{StaticResource TitleTextBlock}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Border Height="10"/>
                                    <md:PopupBox PlacementMode="BottomAndAlignCentres" Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                                 ToolTip="{le:Loc Command_AddLaunchItem}" ToolTipService.Placement="Right" HorizontalAlignment="Center">
                                        <StackPanel>
                                            <Button DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                    Command="{Binding AddLinkCommand, Mode=OneTime}"
                                                    ToolTip="{le:Loc Command_SelectFilePath}">
                                                <Button.CommandParameter>
                                                    <s:Boolean>False</s:Boolean>
                                                </Button.CommandParameter>
                                                <md:PackIcon Kind="File"/>
                                            </Button>
                                            <Button DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                    Command="{Binding AddLinkCommand, Mode=OneTime}"
                                                    ToolTip="{le:Loc Command_SelectDirectoryPath}">
                                                <Button.CommandParameter>
                                                    <s:Boolean>True</s:Boolean>
                                                </Button.CommandParameter>
                                                <md:PackIcon Kind="FolderOpen"/>
                                            </Button>
                                            <Button DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                    Command="{Binding AddGroupCommand, Mode=OneTime}"
                                                    ToolTip="{le:Loc Command_AddGroup}">
                                                <md:PackIcon Kind="FileTableBoxOutline"/>
                                            </Button>
                                        </StackPanel>
                                    </md:PopupBox>
                                </StackPanel>
                            </Border>
                            
                            <m:TransitioningContentControl Grid.Row="2" Grid.Column="2" Content="{Binding SelectedItem, Mode=OneWay, ElementName=LaunchItems}" Transition="LeftReplace">
                                <ContentControl.Resources>
                                    <!-- コンテンツテンプレート(Link) -->
                                    <DataTemplate x:Key="LinkTemplate">
                                        <Grid ge:GridEx.RowDefinition="Auto, Auto, *, Auto, 10, Auto">
                                            <StackPanel Grid.Row="0" Orientation="Horizontal">
                                                <md:PackIcon Kind="Link" VerticalAlignment="Center"/>
                                                <TextBlock Text="{le:Loc Label_Link}" Style="{StaticResource TitleTextBlock}"/>
                                            </StackPanel>
                                            <Grid Grid.Row="1" ge:GridEx.ColumnDefinition="*, 5, Auto, Auto">
                                                <TextBox Grid.Column="0" Text="{Binding FileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" md:HintAssist.Hint="{le:Loc Label_Name}"/>
                                                <Button  Grid.Column="2" DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                         Command="{Binding SelectPathCommand, Mode=OneTime}" ToolTip="{le:Loc Command_SelectFilePath}" Style="{StaticResource MaterialDesignFlatButton}">
                                                    <Button.CommandParameter>
                                                        <s:Boolean>False</s:Boolean>
                                                    </Button.CommandParameter>
                                                    <md:PackIcon Kind="File"/>
                                                </Button>
                                                <Button  Grid.Column="3" DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                         Command="{Binding SelectPathCommand, Mode=OneTime}" ToolTip="{le:Loc Command_SelectDirectoryPath}" Style="{StaticResource MaterialDesignFlatButton}">
                                                    <Button.CommandParameter>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Button.CommandParameter>
                                                    <md:PackIcon Kind="FolderOpen"/>
                                                </Button>
                                            </Grid>
                                            <Grid Grid.Row="3" ge:GridEx.ColumnDefinition="Auto, *, Auto" HorizontalAlignment="Center"
                                                  DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                                <Button Grid.Column="0" Command="{Binding RemoveItemCommand, Mode=OneTime}" ToolTip="{le:Loc Command_RemoveItem}" Style="{StaticResource MaterialDesignFloatingActionAccentButton}">
                                                    <md:PackIcon Kind="DeleteOutline"/>
                                                </Button>
                                            </Grid>
                                            <Border Grid.Row="5" Height="1" Margin="20 0" Background="{DynamicResource MaterialDesignDivider}"/>
                                        </Grid>
                                    </DataTemplate>
                                    <!-- コンテンツテンプレート(Group) -->
                                    <DataTemplate x:Key="GroupTemplate">
                                        <Grid ge:GridEx.RowDefinition="Auto, Auto, *, Auto, 10, Auto">
                                            <StackPanel Grid.Row="0" Orientation="Horizontal">
                                                <md:PackIcon Kind="FileTableBoxOutline" VerticalAlignment="Center"/>
                                                <TextBlock Text="{le:Loc Label_Group}" Style="{StaticResource TitleTextBlock}"/>
                                            </StackPanel>
                                            <TextBox Grid.Row="1" Text="{Binding FileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" md:HintAssist.Hint="{le:Loc Label_Name}"/>
                                            <Grid Grid.Row="3" ge:GridEx.ColumnDefinition="Auto, 10, Auto, 10, Auto" HorizontalAlignment="Center"
                                                  DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                                <md:PopupBox Grid.Column="0" PlacementMode="TopAndAlignCentres" Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                                             ToolTip="{le:Loc Command_AddLaunchItem}" ToolTipService.Placement="Right">
                                                    <md:PopupBox.ToggleContent>
                                                        <md:PackIcon Kind="Link" Width="24" Height="24" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type md:PopupBox}}}" />
                                                    </md:PopupBox.ToggleContent>
                                                    <StackPanel>
                                                        <Button DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                                Command="{Binding AddLinkCommand, Mode=OneTime}"
                                                                ToolTip="{le:Loc Command_SelectFilePath}">
                                                            <Button.CommandParameter>
                                                                <s:Boolean>False</s:Boolean>
                                                            </Button.CommandParameter>
                                                            <md:PackIcon Kind="File"/>
                                                        </Button>
                                                        <Button DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                                Command="{Binding AddLinkCommand, Mode=OneTime}"
                                                                ToolTip="{le:Loc Command_SelectDirectoryPath}">
                                                            <Button.CommandParameter>
                                                                <s:Boolean>True</s:Boolean>
                                                            </Button.CommandParameter>
                                                            <md:PackIcon Kind="FolderOpen"/>
                                                        </Button>
                                                    </StackPanel>
                                                </md:PopupBox>
                                                <Button Grid.Column="2" Command="{Binding AddGroupCommand, Mode=OneTime}" ToolTip="{le:Loc Command_AddGroup}" Style="{StaticResource MaterialDesignFloatingActionButton}">
                                                    <md:PackIcon Kind="FileTableBoxOutline"/>
                                                </Button>
                                                <Button Grid.Column="4" Command="{Binding RemoveItemCommand, Mode=OneTime}" ToolTip="{le:Loc Command_RemoveItem}" Style="{StaticResource MaterialDesignFloatingActionAccentButton}">
                                                    <md:PackIcon Kind="DeleteOutline"/>
                                                </Button>
                                            </Grid>
                                            <Border Grid.Row="5" Height="1" Margin="20 0" Background="{DynamicResource MaterialDesignDivider}"/>
                                        </Grid>
                                    </DataTemplate>
                                    <!-- コンテンツテンプレート(Separator) -->
                                    <DataTemplate x:Key="SeparatorTemplate">
                                        <Grid ge:GridEx.RowDefinition="Auto, Auto, *, Auto, 10, Auto">
                                            <StackPanel Grid.Row="0" Orientation="Horizontal">
                                                <md:PackIcon Kind="Minus" VerticalAlignment="Center"/>
                                                <TextBlock Text="{le:Loc Label_Separator}" Style="{StaticResource TitleTextBlock}"/>
                                            </StackPanel>
                                            <TextBlock Grid.Row="1" Text="{le:Loc Text_SeparatorHint}" Style="{StaticResource TitleTextBlock}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <Grid Grid.Row="3" ge:GridEx.ColumnDefinition="Auto, *, Auto" HorizontalAlignment="Center"
                                                  DataContext="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                                <Button Grid.Column="0" Command="{Binding RemoveItemCommand, Mode=OneTime}" ToolTip="{le:Loc Command_RemoveItem}" Style="{StaticResource MaterialDesignFloatingActionAccentButton}">
                                                    <md:PackIcon Kind="DeleteOutline"/>
                                                </Button>
                                            </Grid>
                                            <Border Grid.Row="5" Height="1" Margin="20 0" Background="{DynamicResource MaterialDesignDivider}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ContentControl.Resources>
                                <ContentControl.ContentTemplateSelector>
                                    <helpers:PreferencesLaunchItemTemplateSelector
                                        LinkTemplate="{StaticResource LinkTemplate}"
                                        GroupTemplate="{StaticResource GroupTemplate}"
                                        SeparatorTemplate="{StaticResource SeparatorTemplate}"/>
                                </ContentControl.ContentTemplateSelector>
                            </m:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>

                    <!-- ランチャー設定 -->
                    <DataTemplate x:Key="LaunchSettingsContentTemplate">
                        <DataTemplate.Resources>
                            <Style x:Key="TitleTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignSubtitle1TextBlock}">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <Style x:Key="TextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignTextBlock}">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <Style TargetType="{x:Type m:NumericUpDown}" BasedOn="{StaticResource MaterialDesignNumericUpDown}">
                                <Setter Property="Margin" Value="5"/>
                                <Style.Resources>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                                </Style.Resources>
                            </Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignRadioButton}">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignFlatPrimaryToggleButton}">
                                <Setter Property="Height" Value="48"/>
                                <Setter Property="Width"  Value="48"/>
                            </Style>
                            <Style TargetType="{x:Type md:PackIcon}">
                                <Setter Property="Height" Value="36"/>
                                <Setter Property="Width"  Value="36"/>
                            </Style>
                        </DataTemplate.Resources>

                        <Grid Margin="20" ge:GridEx.RowDefinition="Auto, 10, Auto" ge:GridEx.ColumnDefinition="Auto, 20, *"
                              DataContext="{Binding Data.Settings, Mode=OneWay, Source={StaticResource Proxy}}">
                            <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="{le:Loc Text_LaunchSettingsTitle}" Style="{StaticResource TitleTextBlock}"/>

                            <Grid Grid.Row="2" Grid.Column="0" ge:GridEx.RowDefinition="Auto, 10, Auto">
                                <TextBlock Grid.Row="0" Text="{le:Loc Label_ShowLaunchBorder}" Style="{StaticResource TextBlock}"/>
                                <Grid      Grid.Row="2" ge:GridEx.RowDefinition="Auto, Auto, Auto, Auto" ge:GridEx.ColumnDefinition="Auto, Auto, Auto, Auto">
                                    <ToggleButton Grid.Row="1" Grid.Column="0" IsChecked="{Binding ShowLaunchBorderLeft, Mode=TwoWay}"   Content="{md:PackIcon BorderLeftVariant}"/>
                                    <ToggleButton Grid.Row="0" Grid.Column="1" IsChecked="{Binding ShowLaunchBorderTop, Mode=TwoWay}"    Content="{md:PackIcon BorderTopVariant}"/>
                                    <ToggleButton Grid.Row="1" Grid.Column="2" IsChecked="{Binding ShowLaunchBorderRight, Mode=TwoWay}"  Content="{md:PackIcon BorderRightVariant}"/>
                                    <ToggleButton Grid.Row="2" Grid.Column="1" IsChecked="{Binding ShowLaunchBorderBottom, Mode=TwoWay}" Content="{md:PackIcon BorderBottomVariant}"/>
                                </Grid>
                            </Grid>
                            
                            <Grid Grid.Row="2" Grid.Column="2" ge:GridEx.RowDefinition="Auto, 10, Auto, 10, Auto" ge:GridEx.ColumnDefinition="Auto, 10, *">
                                <TextBlock  Grid.Row="0" Grid.Column="0" Text="{le:Loc Label_ActivateOn}" Style="{StaticResource TextBlock}"/>
                                <StackPanel Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="3" Orientation="Horizontal">
                                    <RadioButton Content="{le:Loc Label_LeftClick}"  IsChecked="{qc:Binding Convert='!$P', ConvertBack='!$value', P={Binding ActivateOnRightClick, Mode=TwoWay}}"/>
                                    <RadioButton Content="{le:Loc Label_RightClick}" IsChecked="{qc:Binding Convert='$P',  ConvertBack='$value',  P={Binding ActivateOnRightClick, Mode=TwoWay}}"/>
                                </StackPanel>
                                <m:NumericUpDown Grid.Row="2" Grid.ColumnSpan="3" Value="{Binding LaunchBorderSize, Mode=TwoWay}" Minimum="1" Maximum="10" md:HintAssist.Hint="{le:Loc Label_LaunchBorderSize}"/>
                                <ComboBox        Grid.Row="4" Grid.ColumnSpan="3" ItemsSource="{Binding ColorDefinitions, Mode=OneWay}" SelectedValue="{Binding LaunchBorderColor, Mode=TwoWay}" SelectedValuePath="Key" md:HintAssist.Hint="{le:Loc Label_LaunchBorderColor}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Border Background="{qc:Binding '$P.Value', P={Binding Mode=OneWay}}" Width="20" Height="20" Margin="0 0 5 0"/>
                                                <TextBlock Text="{qc:Binding '$P.Key', P={Binding Mode=OneWay}}" Style="{StaticResource TextBlock}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                        </Grid>
                    </DataTemplate>

                    <!-- バージョン情報 -->
                    <DataTemplate x:Key="AboutContentTemplate">
                        <DataTemplate.Resources>
                            <s:Double x:Key="IconSize">24</s:Double>
                            <Style TargetType="{x:Type md:PackIcon}">
                                <Setter Property="Height" Value="{StaticResource IconSize}"/>
                                <Setter Property="Width"  Value="{StaticResource IconSize}"/>
                            </Style>
                        </DataTemplate.Resources>
                        
                        <Grid ge:GridEx.RowDefinition="Auto, 15, Auto, 15, *, Auto" Margin="0 20 0 0" DataContext="{Binding Data, Mode=OneWay, Source={StaticResource Proxy}}">
                            <ScrollViewer Grid.Row="0" Margin="40 0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                                <Grid ge:GridEx.ColumnDefinition="Auto, 15, Auto, 15, Auto, 30, Auto, 15, Auto, 15, Auto">
                                    <Image     Grid.Column="0" Source="{helpers:IconSource /Resources/app.ico}" Width="40" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="2" Text="{Binding ProductInfo.Product, Mode=OneWay}" FontWeight="Bold" FontSize="32" Margin="0 0 0 5" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="4" TextWrapping="Wrap" VerticalAlignment="Center">
                                        <Run Text="{qc:MultiBinding '\'Version \' + $P0.Major + \'.\' + $P0.Minor + \'.\' + $P0.Build + ($P1 ? \' - Debug Build\' : null)', P0={Binding ProductInfo.Version, Mode=OneWay}, P1={Binding ProductInfo.IsDebugBuild, Mode=OneWay}}"/>
                                        <LineBreak/>
                                        <Run Text="{Binding ProductInfo.Copyright, Mode=OneWay}"/>
                                    </TextBlock>

                                    <Button Grid.Column="6" ToolTip="{le:Loc Command_Repository}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" VerticalAlignment="Center" IsTabStop="False">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <behaviors:ProcessStartAction FileName="cmd.exe" Arguments="{qc:Binding '\'/c start \' + $P', P={Binding Source={x:Static root:AppSettingsReader.ProjectSite}, Mode=OneWay}}" CreateNoWindow="True" ThrowException="False"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <md:PackIcon Kind="Github"/>
                                    </Button>
                                    <Button Grid.Column="8" ToolTip="{le:Loc Command_Creator}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" VerticalAlignment="Center" IsTabStop="False">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <behaviors:ProcessStartAction FileName="cmd.exe" Arguments="{qc:Binding '\'/c start \' + $P', P={Binding Source={x:Static root:AppSettingsReader.CreatorSite}, Mode=OneWay}}" CreateNoWindow="True" ThrowException="False"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <md:PackIcon Kind="CardAccountDetails"/>
                                    </Button>
                                    <Button Grid.Column="10" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" ToolTipService.ShowDuration="10000" VerticalAlignment="Center" IsTabStop="False">
                                        <Button.ToolTip>
                                            <StackPanel>
                                                <TextBlock Text="{le:Loc Command_Donate}" FontSize="14"/>
                                                <Border Height="5"/>
                                                <TextBlock Text="{le:Loc Message_NotifyDonate}" Margin="5 0"/>
                                            </StackPanel>
                                        </Button.ToolTip>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <behaviors:ProcessStartAction FileName="cmd.exe" Arguments="{qc:Binding '\'/c start \' + $P', P={Binding Source={x:Static root:AppSettingsReader.DonationSite}, Mode=OneWay}}" CreateNoWindow="True" ThrowException="False"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <md:PackIcon Kind="Smiley"/>
                                    </Button>
                                </Grid>
                            </ScrollViewer>

                            <Border Grid.Row="2" Height="1" Margin="20 0" Background="{DynamicResource MaterialDesignDivider}"/>

                            <m:FlipView Grid.Row="4" CircularNavigation="True" NavigationButtonsPosition="Outside" IsBannerEnabled="False" MouseHoverBorderEnabled="False">
                                <controls:MarkdownViewer Markdown="{Binding About.Value, Mode=OneWay}"         IsTabStop="False"/>
                                <controls:MarkdownViewer Markdown="{Binding History.Value, Mode=OneWay}"       IsTabStop="False"/>
                                <controls:MarkdownViewer Markdown="{Binding Disclaimer.Value, Mode=OneWay}"    IsTabStop="False"/>
                                <controls:MarkdownViewer Markdown="{Binding PrivacyPolicy.Value, Mode=OneWay}" IsTabStop="False"/>
                                <controls:MarkdownViewer Markdown="{Binding OssLicense.Value, Mode=OneWay}"    IsTabStop="False"/>
                            </m:FlipView>

                            <TextBlock Grid.Row="5" TextAlignment="Right" TextTrimming="CharacterEllipsis" Margin="40 0">
                                <Run Text="このアプリケーションはベータ版です。今後の更新で仕様が変更される可能性があります。"/>
                                <LineBreak/>
                                <Run Text="{qc:QuickValue 'Environment.OSVersion.ToString() + \' - CLR \' + Environment.Version.ToString()'}"/>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ContentControl.Resources>

                <ContentControl.ContentTemplateSelector>
                    <helpers:PreferencesContentTemplateSelector
                        LaunchSettingsContentTemplate="{StaticResource LaunchSettingsContentTemplate}"
                        LaunchItemSettingsContentTemplate="{StaticResource LaunchItemSettingsContentTemplate}"
                        AboutContentTemplate="{StaticResource AboutContentTemplate}"/>
                </ContentControl.ContentTemplateSelector>
            </ContentControl>
        </DockPanel>
    </md:DrawerHost>

</m:MetroWindow>
